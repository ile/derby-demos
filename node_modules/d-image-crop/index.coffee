
module.exports = class ImageCrop
	crop = undefined
	instance = undefined
	view: __dirname
	name: 'd-image-crop'
	
	startCrop: (val) =>
		if val
			instance = new crop(@cropper, @dragger,
				minSize: [170, 170]
				coords: [[0, 0], [170, 170]]
				zoom: @zoom
				positionField: @position
				sizeField: @size
			)
	create: ->
		crop = require('./crop')()
		@model.on 'change', 'src', @startCrop
		@startCrop(@model.get 'src')
	t: (s) ->
		t = @model.get('translate')
		if typeof t is 'string' then @app.proto[t].call(@app, s) else s
	cancel: (e) ->
		e.preventDefault()
		@model.del 'src'
	ok: (e) ->
		@submit(e) if instance.changed
		@model.del 'src'
	submit: (e) ->
		if @form.elements?.size?.value and @form.elements?.position?.value
			size = @form.elements.size.value.split(',').map(Number)
			position = @form.elements.position.value.split(',').map((i) -> -parseInt(i, 10))
			data = { size: size, position: position }
			@emit('submit', e, data)
			true
